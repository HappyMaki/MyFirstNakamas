I200512 13:57:20.420268 1 util/log/clog.go:1196  [config] file created at: 2020/05/12 13:57:20
I200512 13:57:20.420268 1 util/log/clog.go:1196  [config] running on machine: 603f13a5817c
I200512 13:57:20.420268 1 util/log/clog.go:1196  [config] binary: CockroachDB CCL v19.2.5 (x86_64-unknown-linux-gnu, built 2020/03/16 18:27:12, go1.12.12)
I200512 13:57:20.420268 1 util/log/clog.go:1196  [config] arguments: [/cockroach/cockroach start --insecure --store=attrs=ssd,path=/var/lib/cockroach/]
I200512 13:57:20.420268 1 util/log/clog.go:1196  line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
I200512 13:57:20.420267 1 cli/start.go:1144  logging to directory /var/lib/cockroach/logs
W200512 13:57:20.427775 1 cli/start.go:1182  RUNNING IN INSECURE MODE!

- Your cluster is open for any client that can access <all your IP addresses>.
- Any user, even root, can log in without providing a password.
- Any user, connecting as root, can read or write any data in your cluster.
- There is no network encryption nor authentication, and thus no confidentiality.

Check out how to secure your cluster: https://www.cockroachlabs.com/docs/v19.2/secure-a-cluster.html
I200512 13:57:20.428208 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
W200512 13:57:20.428446 1 cli/start.go:1052  Using the default setting for --cache (128 MiB).
  A significantly larger value is usually needed for good performance.
  If you have a dedicated server a reasonable setting is --cache=.25 (497 MiB).
I200512 13:57:20.428591 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
W200512 13:57:20.428602 1 cli/start.go:1065  Using the default setting for --max-sql-memory (128 MiB).
  A significantly larger value is usually needed in production.
  If you have a dedicated server a reasonable setting is --max-sql-memory=.25 (497 MiB).
I200512 13:57:20.428708 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
I200512 13:57:20.428719 1 cli/start.go:1196  CockroachDB CCL v19.2.5 (x86_64-unknown-linux-gnu, built 2020/03/16 18:27:12, go1.12.12)
W200512 13:57:20.587713 1 cli/start.go:511  running 'cockroach start' without --join is deprecated.
Consider using 'cockroach start-single-node' or 'cockroach init' instead.
I200512 13:57:20.594866 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
I200512 13:57:20.594883 1 server/config.go:394  system total memory: 1.9 GiB
I200512 13:57:20.594908 1 server/config.go:396  server configuration:
max offset             500000000
cache size             128 MiB
SQL memory pool size   128 MiB
scan interval          10m0s
scan min idle time     10ms
scan max idle time     1s
event log enabled      true
I200512 13:57:20.594939 1 cli/start.go:1030  using local environment variables: COCKROACH_CHANNEL=official-docker
I200512 13:57:20.594954 1 cli/start.go:1037  process identity: uid 0 euid 0 gid 0 egid 0
I200512 13:57:20.594996 1 cli/start.go:644  starting cockroach node
I200512 13:57:20.598896 26 storage/engine/rocksdb.go:622  opening rocksdb instance at "/var/lib/cockroach/cockroach-temp159228073"
I200512 13:57:20.681495 26 server/server.go:928  [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I200512 13:57:20.682246 26 storage/engine/rocksdb.go:622  opening rocksdb instance at "/var/lib/cockroach"
I200512 13:57:20.755107 26 server/config.go:502  [n?] 1 storage engine initialized
I200512 13:57:20.755117 26 server/config.go:505  [n?] RocksDB cache size: 128 MiB
I200512 13:57:20.755137 26 server/config.go:505  [n?] store 0: RocksDB, max size 0 B, max open file limit 1043576
W200512 13:57:20.780379 26 cli/start.go:996  neither --listen-addr nor --advertise-addr was specified.
The server will advertise "603f13a5817c" to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I200512 13:57:20.782530 26 server/server.go:978  [n?] Sleeping till wall time 1589291840782498653 to catches up to 1589291841181464154 to ensure monotonicity. Delta: 398.965501ms
I200512 13:57:21.182571 26 gossip/gossip.go:394  [n1] NodeDescriptor set to node_id:1 address:<network_field:"tcp" address_field:"603f13a5817c:26257" > attrs:<> locality:<> ServerVersion:<major_val:19 minor_val:2 patch:0 unstable:0 > build_tag:"v19.2.5" started_at:1589291841182442553 cluster_name:"" sql_address:<network_field:"tcp" address_field:"603f13a5817c:26257" > 
W200512 13:57:21.207593 113 storage/replica_range_lease.go:554  can't determine lease status due to node liveness error: node not in the liveness table
github.com/cockroachdb/cockroach/pkg/storage.init.ializers
	/go/src/github.com/cockroachdb/cockroach/pkg/storage/node_liveness.go:44
runtime.main
	/usr/local/go/src/runtime/proc.go:188
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1337
W200512 13:57:21.207614 113 storage/store.go:1530  [n1,s1,r6/1:/Table/{SystemCon…-11}] could not gossip system config: [NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown
I200512 13:57:21.227265 26 server/node.go:431  [n1] initialized store [n1,s1]: disk (capacity=894 GiB, available=593 GiB, used=8.7 MiB, logicalBytes=56 MiB), ranges=38, leases=2, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=14688.00 p90=78006.00 pMax=57954289.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I200512 13:57:21.227370 26 storage/stores.go:240  [n1] read 0 node addresses from persistent storage
I200512 13:57:21.227493 26 server/node.go:645  [n1] connecting to gossip network to verify cluster ID...
I200512 13:57:21.227511 26 server/node.go:665  [n1] node connected via gossip and verified as part of cluster "3d423bb5-5d67-4ebf-947b-999bec430444"
I200512 13:57:21.227587 26 server/node.go:512  [n1] node=1: started with [ssd=/var/lib/cockroach] engine(s) and attributes []
I200512 13:57:21.228839 26 server/server.go:1514  [n1] starting http server at [::]:8080 (use: 603f13a5817c:8080)
I200512 13:57:21.228851 26 server/server.go:1521  [n1] starting grpc/postgres server at [::]:26257
I200512 13:57:21.228859 26 server/server.go:1522  [n1] advertising CockroachDB node at 603f13a5817c:26257
I200512 13:57:21.235203 26 server/server.go:1590  [n1] done ensuring all necessary migrations have run
I200512 13:57:21.235256 26 server/server.go:1841  [n1] serving sql connections
I200512 13:57:21.235305 26 cli/start.go:803  [config] clusterID: 3d423bb5-5d67-4ebf-947b-999bec430444
I200512 13:57:21.235317 26 cli/start.go:812  node startup completed:
CockroachDB node starting at 2020-05-12 13:57:21.235270253 +0000 UTC (took 0.8s)
build:               CCL v19.2.5 @ 2020/03/16 18:27:12 (go1.12.12)
webui:               http://603f13a5817c:8080
sql:                 postgresql://root@603f13a5817c:26257?sslmode=disable
RPC client flags:    /cockroach/cockroach <client cmd> --host=603f13a5817c:26257 --insecure
logs:                /var/lib/cockroach/logs
temp dir:            /var/lib/cockroach/cockroach-temp159228073
external I/O path:   /var/lib/cockroach/extern
store[0]:            path=/var/lib/cockroach,attrs=ssd
status:              restarted pre-existing node
clusterID:           3d423bb5-5d67-4ebf-947b-999bec430444
nodeID:              1
I200512 13:57:21.247583 162 server/server_update.go:53  [n1] no need to upgrade, cluster already at the newest version
I200512 13:57:21.252386 164 sql/event_log.go:130  [n1] Event: "node_restart", target: 1, info: {Descriptor:{NodeID:1 Address:603f13a5817c:26257 Attrs: Locality: ServerVersion:19.2 BuildTag:v19.2.5 StartedAt:1589291841182442553 LocalityAddress:[] ClusterName: SQLAddress:603f13a5817c:26257} ClusterID:3d423bb5-5d67-4ebf-947b-999bec430444 StartedAt:1589291841182442553 LastUp:1589291839325363955}
I200512 13:57:22.538701 69 gossip/gossip.go:1531  [n1] node has connected to cluster via gossip
I200512 13:57:22.538805 69 storage/stores.go:259  [n1] wrote 0 node addresses to persistent storage
I200512 13:57:30.763652 1 cli/start.go:865  received signal 'terminated'
I200512 13:57:30.763972 1 cli/start.go:930  initiating graceful shutdown of server
I200512 13:57:30.772704 389 util/stop/stopper.go:542  [server drain process] quiescing; tasks left:
1      [async] intent_resolver_ir_batcher
1      [async] intent_resolver_gc_batcher
1      [async] closedts-rangefeed-subscriber
I200512 13:57:30.779427 389 util/stop/stopper.go:542  [server drain process] quiescing; tasks left:
1      [async] intent_resolver_ir_batcher
1      [async] closedts-rangefeed-subscriber
I200512 13:57:30.787934 389 util/stop/stopper.go:542  [server drain process] quiescing; tasks left:
1      [async] closedts-rangefeed-subscriber
W200512 13:57:30.788246 61 vendor/google.golang.org/grpc/clientconn.go:1206  grpc: addrConn.createTransport failed to connect to {603f13a5817c:26257 0  <nil>}. Err :connection error: desc = "transport: failed to write client preface: io: read/write on closed pipe". Reconnecting...
I200512 13:57:30.789141 389 storage/engine/rocksdb.go:762  closing rocksdb instance at "/var/lib/cockroach/cockroach-temp159228073"
I200512 13:57:30.797251 389 storage/engine/rocksdb.go:762  closing rocksdb instance at "/var/lib/cockroach"
I200512 13:57:30.805749 1 cli/start.go:976  server drained and shutdown completed
