I200520 23:57:15.402869 1 util/log/clog.go:1196  [config] file created at: 2020/05/20 23:57:15
I200520 23:57:15.402869 1 util/log/clog.go:1196  [config] running on machine: beddd57000c7
I200520 23:57:15.402869 1 util/log/clog.go:1196  [config] binary: CockroachDB CCL v19.2.5 (x86_64-unknown-linux-gnu, built 2020/03/16 18:27:12, go1.12.12)
I200520 23:57:15.402869 1 util/log/clog.go:1196  [config] arguments: [/cockroach/cockroach start --insecure --store=attrs=ssd,path=/var/lib/cockroach/]
I200520 23:57:15.402869 1 util/log/clog.go:1196  line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
I200520 23:57:15.402869 1 cli/start.go:1144  logging to directory /var/lib/cockroach/logs
W200520 23:57:15.426840 1 cli/start.go:1182  RUNNING IN INSECURE MODE!

- Your cluster is open for any client that can access <all your IP addresses>.
- Any user, even root, can log in without providing a password.
- Any user, connecting as root, can read or write any data in your cluster.
- There is no network encryption nor authentication, and thus no confidentiality.

Check out how to secure your cluster: https://www.cockroachlabs.com/docs/v19.2/secure-a-cluster.html
I200520 23:57:15.427066 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
W200520 23:57:15.427116 1 cli/start.go:1052  Using the default setting for --cache (128 MiB).
  A significantly larger value is usually needed for good performance.
  If you have a dedicated server a reasonable setting is --cache=.25 (497 MiB).
I200520 23:57:15.427268 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
W200520 23:57:15.427279 1 cli/start.go:1065  Using the default setting for --max-sql-memory (128 MiB).
  A significantly larger value is usually needed in production.
  If you have a dedicated server a reasonable setting is --max-sql-memory=.25 (497 MiB).
I200520 23:57:15.427387 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
I200520 23:57:15.427397 1 cli/start.go:1196  CockroachDB CCL v19.2.5 (x86_64-unknown-linux-gnu, built 2020/03/16 18:27:12, go1.12.12)
W200520 23:57:16.683402 1 cli/start.go:511  running 'cockroach start' without --join is deprecated.
Consider using 'cockroach start-single-node' or 'cockroach init' instead.
I200520 23:57:16.708355 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
I200520 23:57:16.708374 1 server/config.go:394  system total memory: 1.9 GiB
I200520 23:57:16.708400 1 server/config.go:396  server configuration:
max offset             500000000
cache size             128 MiB
SQL memory pool size   128 MiB
scan interval          10m0s
scan min idle time     10ms
scan max idle time     1s
event log enabled      true
I200520 23:57:16.708409 1 cli/start.go:1030  using local environment variables: COCKROACH_CHANNEL=official-docker
I200520 23:57:16.708417 1 cli/start.go:1037  process identity: uid 0 euid 0 gid 0 egid 0
I200520 23:57:16.708453 1 cli/start.go:644  starting cockroach node
I200520 23:57:16.711291 35 storage/engine/rocksdb.go:622  opening rocksdb instance at "/var/lib/cockroach/cockroach-temp387227361"
I200520 23:57:17.074379 35 server/server.go:928  [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I200520 23:57:17.075935 35 storage/engine/rocksdb.go:622  opening rocksdb instance at "/var/lib/cockroach"
I200520 23:57:17.186834 35 server/config.go:502  [n?] 1 storage engine initialized
I200520 23:57:17.186842 35 server/config.go:505  [n?] RocksDB cache size: 128 MiB
I200520 23:57:17.186847 35 server/config.go:505  [n?] store 0: RocksDB, max size 0 B, max open file limit 1043576
W200520 23:57:17.204963 35 cli/start.go:996  neither --listen-addr nor --advertise-addr was specified.
The server will advertise "beddd57000c7" to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I200520 23:57:17.205862 35 server/server.go:978  [n?] Sleeping till wall time 1590019037205845910 to catches up to 1590019037574338008 to ensure monotonicity. Delta: 368.492098ms
I200520 23:57:17.574760 35 gossip/gossip.go:394  [n1] NodeDescriptor set to node_id:1 address:<network_field:"tcp" address_field:"beddd57000c7:26257" > attrs:<> locality:<> ServerVersion:<major_val:19 minor_val:2 patch:0 unstable:0 > build_tag:"v19.2.5" started_at:1590019037574611120 cluster_name:"" sql_address:<network_field:"tcp" address_field:"beddd57000c7:26257" > 
W200520 23:57:17.625075 103 storage/replica_range_lease.go:554  can't determine lease status due to node liveness error: node not in the liveness table
github.com/cockroachdb/cockroach/pkg/storage.init.ializers
	/go/src/github.com/cockroachdb/cockroach/pkg/storage/node_liveness.go:44
runtime.main
	/usr/local/go/src/runtime/proc.go:188
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1337
W200520 23:57:17.625097 103 storage/store.go:1530  [n1,s1,r6/1:/Table/{SystemCon…-11}] could not gossip system config: [NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown
I200520 23:57:17.991661 35 server/node.go:431  [n1] initialized store [n1,s1]: disk (capacity=894 GiB, available=562 GiB, used=38 MiB, logicalBytes=156 MiB), ranges=42, leases=3, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=209.00 p75=22764.00 p90=13118810.00 pMax=45081282.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I200520 23:57:17.991752 35 storage/stores.go:240  [n1] read 0 node addresses from persistent storage
I200520 23:57:17.991822 35 server/node.go:645  [n1] connecting to gossip network to verify cluster ID...
I200520 23:57:17.991835 35 server/node.go:665  [n1] node connected via gossip and verified as part of cluster "3d423bb5-5d67-4ebf-947b-999bec430444"
I200520 23:57:17.991885 35 server/node.go:512  [n1] node=1: started with [ssd=/var/lib/cockroach] engine(s) and attributes []
I200520 23:57:17.993058 35 server/server.go:1514  [n1] starting http server at [::]:8080 (use: beddd57000c7:8080)
I200520 23:57:17.993068 35 server/server.go:1521  [n1] starting grpc/postgres server at [::]:26257
I200520 23:57:17.993076 35 server/server.go:1522  [n1] advertising CockroachDB node at beddd57000c7:26257
I200520 23:57:18.139105 35 server/server.go:1590  [n1] done ensuring all necessary migrations have run
I200520 23:57:18.139156 35 server/server.go:1841  [n1] serving sql connections
I200520 23:57:18.141174 327 server/server_update.go:53  [n1] no need to upgrade, cluster already at the newest version
I200520 23:57:18.142682 35 cli/start.go:803  [config] clusterID: 3d423bb5-5d67-4ebf-947b-999bec430444
I200520 23:57:18.142696 35 cli/start.go:812  node startup completed:
CockroachDB node starting at 2020-05-20 23:57:18.139168536 +0000 UTC (took 2.7s)
build:               CCL v19.2.5 @ 2020/03/16 18:27:12 (go1.12.12)
webui:               http://beddd57000c7:8080
sql:                 postgresql://root@beddd57000c7:26257?sslmode=disable
RPC client flags:    /cockroach/cockroach <client cmd> --host=beddd57000c7:26257 --insecure
logs:                /var/lib/cockroach/logs
temp dir:            /var/lib/cockroach/cockroach-temp387227361
external I/O path:   /var/lib/cockroach/extern
store[0]:            path=/var/lib/cockroach,attrs=ssd
status:              restarted pre-existing node
clusterID:           3d423bb5-5d67-4ebf-947b-999bec430444
nodeID:              1
I200520 23:57:18.149569 329 sql/event_log.go:130  [n1] Event: "node_restart", target: 1, info: {Descriptor:{NodeID:1 Address:beddd57000c7:26257 Attrs: Locality: ServerVersion:19.2 BuildTag:v19.2.5 StartedAt:1590019037574611120 LocalityAddress:[] ClusterName: SQLAddress:beddd57000c7:26257} ClusterID:3d423bb5-5d67-4ebf-947b-999bec430444 StartedAt:1590019037574611120 LastUp:1590019034200592900}
I200520 23:57:19.044804 331 server/updates.go:267  [n1] A new version is available: 20.1.0, details: https://www.cockroachlabs.com/docs/releases/v20.1.0.html
I200520 23:57:19.071267 11 gossip/gossip.go:1531  [n1] node has connected to cluster via gossip
I200520 23:57:19.071342 11 storage/stores.go:259  [n1] wrote 0 node addresses to persistent storage
I200520 23:57:28.000410 135 server/status/runtime.go:498  [n1] runtime stats: 121 MiB RSS, 117 goroutines, 105 MiB/19 MiB/135 MiB GO alloc/idle/total, 15 MiB/18 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (9x), 35 KiB/43 KiB (r/w)net
I200520 23:57:37.938425 1 cli/start.go:865  received signal 'terminated'
I200520 23:57:37.938714 1 cli/start.go:930  initiating graceful shutdown of server
I200520 23:57:37.961775 773 util/stop/stopper.go:542  [server drain process] quiescing; tasks left:
1      [async] intent_resolver_ir_batcher
1      [async] intent_resolver_gc_batcher
1      [async] closedts-rangefeed-subscriber
W200520 23:57:37.962008 70 vendor/google.golang.org/grpc/clientconn.go:1206  grpc: addrConn.createTransport failed to connect to {beddd57000c7:26257 0  <nil>}. Err :connection error: desc = "transport: failed to write client preface: io: read/write on closed pipe". Reconnecting...
I200520 23:57:37.962770 773 storage/engine/rocksdb.go:762  closing rocksdb instance at "/var/lib/cockroach/cockroach-temp387227361"
I200520 23:57:37.973247 773 storage/engine/rocksdb.go:762  closing rocksdb instance at "/var/lib/cockroach"
I200520 23:57:37.985966 1 cli/start.go:976  server drained and shutdown completed
