I200514 15:34:52.026819 1 util/log/clog.go:1196  [config] file created at: 2020/05/14 15:34:52
I200514 15:34:52.026819 1 util/log/clog.go:1196  [config] running on machine: d4c7f7d152bb
I200514 15:34:52.026819 1 util/log/clog.go:1196  [config] binary: CockroachDB CCL v19.2.5 (x86_64-unknown-linux-gnu, built 2020/03/16 18:27:12, go1.12.12)
I200514 15:34:52.026819 1 util/log/clog.go:1196  [config] arguments: [/cockroach/cockroach start --insecure --store=attrs=ssd,path=/var/lib/cockroach/]
I200514 15:34:52.026819 1 util/log/clog.go:1196  line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
I200514 15:34:52.026818 1 cli/start.go:1144  logging to directory /var/lib/cockroach/logs
W200514 15:34:52.034425 1 cli/start.go:1182  RUNNING IN INSECURE MODE!

- Your cluster is open for any client that can access <all your IP addresses>.
- Any user, even root, can log in without providing a password.
- Any user, connecting as root, can read or write any data in your cluster.
- There is no network encryption nor authentication, and thus no confidentiality.

Check out how to secure your cluster: https://www.cockroachlabs.com/docs/v19.2/secure-a-cluster.html
I200514 15:34:52.034825 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
W200514 15:34:52.034902 1 cli/start.go:1052  Using the default setting for --cache (128 MiB).
  A significantly larger value is usually needed for good performance.
  If you have a dedicated server a reasonable setting is --cache=.25 (497 MiB).
I200514 15:34:52.035343 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
W200514 15:34:52.035383 1 cli/start.go:1065  Using the default setting for --max-sql-memory (128 MiB).
  A significantly larger value is usually needed in production.
  If you have a dedicated server a reasonable setting is --max-sql-memory=.25 (497 MiB).
I200514 15:34:52.035659 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
I200514 15:34:52.035670 1 cli/start.go:1196  CockroachDB CCL v19.2.5 (x86_64-unknown-linux-gnu, built 2020/03/16 18:27:12, go1.12.12)
W200514 15:34:52.387926 1 cli/start.go:511  running 'cockroach start' without --join is deprecated.
Consider using 'cockroach start-single-node' or 'cockroach init' instead.
I200514 15:34:52.406767 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
I200514 15:34:52.406798 1 server/config.go:394  system total memory: 1.9 GiB
I200514 15:34:52.406838 1 server/config.go:396  server configuration:
max offset             500000000
cache size             128 MiB
SQL memory pool size   128 MiB
scan interval          10m0s
scan min idle time     10ms
scan max idle time     1s
event log enabled      true
I200514 15:34:52.406849 1 cli/start.go:1030  using local environment variables: COCKROACH_CHANNEL=official-docker
I200514 15:34:52.406859 1 cli/start.go:1037  process identity: uid 0 euid 0 gid 0 egid 0
I200514 15:34:52.406897 1 cli/start.go:644  starting cockroach node
I200514 15:34:52.418672 29 storage/engine/rocksdb.go:622  opening rocksdb instance at "/var/lib/cockroach/cockroach-temp434082041"
I200514 15:34:52.613609 29 server/server.go:928  [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I200514 15:34:52.615142 29 storage/engine/rocksdb.go:622  opening rocksdb instance at "/var/lib/cockroach"
I200514 15:34:52.970453 29 server/config.go:502  [n?] 1 storage engine initialized
I200514 15:34:52.970461 29 server/config.go:505  [n?] RocksDB cache size: 128 MiB
I200514 15:34:52.970477 29 server/config.go:505  [n?] store 0: RocksDB, max size 0 B, max open file limit 1043576
W200514 15:34:52.995913 29 cli/start.go:996  neither --listen-addr nor --advertise-addr was specified.
The server will advertise "d4c7f7d152bb" to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I200514 15:34:52.997684 29 server/server.go:978  [n?] Sleeping till wall time 1589470492997651685 to catches up to 1589470493113525789 to ensure monotonicity. Delta: 115.874104ms
I200514 15:34:53.113949 29 gossip/gossip.go:394  [n1] NodeDescriptor set to node_id:1 address:<network_field:"tcp" address_field:"d4c7f7d152bb:26257" > attrs:<> locality:<> ServerVersion:<major_val:19 minor_val:2 patch:0 unstable:0 > build_tag:"v19.2.5" started_at:1589470493113841785 cluster_name:"" sql_address:<network_field:"tcp" address_field:"d4c7f7d152bb:26257" > 
W200514 15:34:53.157890 106 storage/replica_range_lease.go:554  can't determine lease status due to node liveness error: node not in the liveness table
github.com/cockroachdb/cockroach/pkg/storage.init.ializers
	/go/src/github.com/cockroachdb/cockroach/pkg/storage/node_liveness.go:44
runtime.main
	/usr/local/go/src/runtime/proc.go:188
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1337
W200514 15:34:53.157913 106 storage/store.go:1530  [n1,s1,r6/1:/Table/{SystemCon…-11}] could not gossip system config: [NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown
I200514 15:34:53.261705 29 server/node.go:431  [n1] initialized store [n1,s1]: disk (capacity=894 GiB, available=579 GiB, used=27 MiB, logicalBytes=73 MiB), ranges=39, leases=3, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=18275.00 p90=64017.00 pMax=43076943.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I200514 15:34:53.261802 29 storage/stores.go:240  [n1] read 0 node addresses from persistent storage
I200514 15:34:53.261890 29 server/node.go:645  [n1] connecting to gossip network to verify cluster ID...
I200514 15:34:53.261904 29 server/node.go:665  [n1] node connected via gossip and verified as part of cluster "3d423bb5-5d67-4ebf-947b-999bec430444"
I200514 15:34:53.261931 29 server/node.go:512  [n1] node=1: started with [ssd=/var/lib/cockroach] engine(s) and attributes []
I200514 15:34:53.263770 29 server/server.go:1514  [n1] starting http server at [::]:8080 (use: d4c7f7d152bb:8080)
I200514 15:34:53.263790 29 server/server.go:1521  [n1] starting grpc/postgres server at [::]:26257
I200514 15:34:53.263806 29 server/server.go:1522  [n1] advertising CockroachDB node at d4c7f7d152bb:26257
I200514 15:34:53.285393 29 server/server.go:1590  [n1] done ensuring all necessary migrations have run
I200514 15:34:53.285416 29 server/server.go:1841  [n1] serving sql connections
I200514 15:34:53.285468 29 cli/start.go:803  [config] clusterID: 3d423bb5-5d67-4ebf-947b-999bec430444
I200514 15:34:53.285480 29 cli/start.go:812  node startup completed:
CockroachDB node starting at 2020-05-14 15:34:53.285428184 +0000 UTC (took 1.3s)
build:               CCL v19.2.5 @ 2020/03/16 18:27:12 (go1.12.12)
webui:               http://d4c7f7d152bb:8080
sql:                 postgresql://root@d4c7f7d152bb:26257?sslmode=disable
RPC client flags:    /cockroach/cockroach <client cmd> --host=d4c7f7d152bb:26257 --insecure
logs:                /var/lib/cockroach/logs
temp dir:            /var/lib/cockroach/cockroach-temp434082041
external I/O path:   /var/lib/cockroach/extern
store[0]:            path=/var/lib/cockroach,attrs=ssd
status:              restarted pre-existing node
clusterID:           3d423bb5-5d67-4ebf-947b-999bec430444
nodeID:              1
I200514 15:34:53.289479 269 server/server_update.go:53  [n1] no need to upgrade, cluster already at the newest version
I200514 15:34:53.302694 271 sql/event_log.go:130  [n1] Event: "node_restart", target: 1, info: {Descriptor:{NodeID:1 Address:d4c7f7d152bb:26257 Attrs: Locality: ServerVersion:19.2 BuildTag:v19.2.5 StartedAt:1589470493113841785 LocalityAddress:[] ClusterName: SQLAddress:d4c7f7d152bb:26257} ClusterID:3d423bb5-5d67-4ebf-947b-999bec430444 StartedAt:1589470493113841785 LastUp:1589470490817892800}
I200514 15:34:54.473096 273 server/updates.go:267  [n1] A new version is available: 20.1.0, details: https://www.cockroachlabs.com/docs/releases/v20.1.0.html
I200514 15:34:55.065901 73 gossip/gossip.go:1531  [n1] node has connected to cluster via gossip
I200514 15:34:55.065978 73 storage/stores.go:259  [n1] wrote 0 node addresses to persistent storage
I200514 15:35:03.265463 149 server/status/runtime.go:498  [n1] runtime stats: 138 MiB RSS, 115 goroutines, 104 MiB/20 MiB/135 MiB GO alloc/idle/total, 16 MiB/20 MiB CGO alloc/total, 0.0 CGO/sec, 0.0/0.0 %(u/s)time, 0.0 %gc (10x), 84 KiB/115 KiB (r/w)net
I200514 15:35:07.472863 1 cli/start.go:865  received signal 'terminated'
I200514 15:35:07.473306 1 cli/start.go:930  initiating graceful shutdown of server
I200514 15:35:07.479066 652 util/stop/stopper.go:542  [server drain process] quiescing; tasks left:
1      [async] intent_resolver_ir_batcher
1      [async] intent_resolver_gc_batcher
1      [async] closedts-rangefeed-subscriber
W200514 15:35:07.479355 65 vendor/google.golang.org/grpc/clientconn.go:1206  grpc: addrConn.createTransport failed to connect to {d4c7f7d152bb:26257 0  <nil>}. Err :connection error: desc = "transport: failed to write client preface: io: read/write on closed pipe". Reconnecting...
I200514 15:35:07.479666 652 util/stop/stopper.go:542  [server drain process] quiescing; tasks left:
1      [async] intent_resolver_ir_batcher
1      [async] closedts-rangefeed-subscriber
I200514 15:35:07.479894 652 util/stop/stopper.go:542  [server drain process] quiescing; tasks left:
1      [async] closedts-rangefeed-subscriber
I200514 15:35:07.480657 652 storage/engine/rocksdb.go:762  closing rocksdb instance at "/var/lib/cockroach/cockroach-temp434082041"
I200514 15:35:07.490656 652 storage/engine/rocksdb.go:762  closing rocksdb instance at "/var/lib/cockroach"
I200514 15:35:07.498581 1 cli/start.go:976  server drained and shutdown completed
