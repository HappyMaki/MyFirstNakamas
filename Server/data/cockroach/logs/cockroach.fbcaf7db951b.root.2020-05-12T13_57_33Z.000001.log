I200512 13:57:33.154041 1 util/log/clog.go:1196  [config] file created at: 2020/05/12 13:57:33
I200512 13:57:33.154041 1 util/log/clog.go:1196  [config] running on machine: fbcaf7db951b
I200512 13:57:33.154041 1 util/log/clog.go:1196  [config] binary: CockroachDB CCL v19.2.5 (x86_64-unknown-linux-gnu, built 2020/03/16 18:27:12, go1.12.12)
I200512 13:57:33.154041 1 util/log/clog.go:1196  [config] arguments: [/cockroach/cockroach start --insecure --store=attrs=ssd,path=/var/lib/cockroach/]
I200512 13:57:33.154041 1 util/log/clog.go:1196  line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
I200512 13:57:33.154041 1 cli/start.go:1144  logging to directory /var/lib/cockroach/logs
W200512 13:57:33.178157 1 cli/start.go:1182  RUNNING IN INSECURE MODE!

- Your cluster is open for any client that can access <all your IP addresses>.
- Any user, even root, can log in without providing a password.
- Any user, connecting as root, can read or write any data in your cluster.
- There is no network encryption nor authentication, and thus no confidentiality.

Check out how to secure your cluster: https://www.cockroachlabs.com/docs/v19.2/secure-a-cluster.html
I200512 13:57:33.178647 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
W200512 13:57:33.178702 1 cli/start.go:1052  Using the default setting for --cache (128 MiB).
  A significantly larger value is usually needed for good performance.
  If you have a dedicated server a reasonable setting is --cache=.25 (497 MiB).
I200512 13:57:33.178961 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
W200512 13:57:33.178971 1 cli/start.go:1065  Using the default setting for --max-sql-memory (128 MiB).
  A significantly larger value is usually needed in production.
  If you have a dedicated server a reasonable setting is --max-sql-memory=.25 (497 MiB).
I200512 13:57:33.179257 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
I200512 13:57:33.179587 1 cli/start.go:1196  CockroachDB CCL v19.2.5 (x86_64-unknown-linux-gnu, built 2020/03/16 18:27:12, go1.12.12)
W200512 13:57:33.350594 1 cli/start.go:511  running 'cockroach start' without --join is deprecated.
Consider using 'cockroach start-single-node' or 'cockroach init' instead.
I200512 13:57:33.357036 1 server/status/recorder.go:597  available memory from cgroups (8.0 EiB) is unsupported, using system memory 1.9 GiB instead: 
I200512 13:57:33.357051 1 server/config.go:394  system total memory: 1.9 GiB
I200512 13:57:33.357074 1 server/config.go:396  server configuration:
max offset             500000000
cache size             128 MiB
SQL memory pool size   128 MiB
scan interval          10m0s
scan min idle time     10ms
scan max idle time     1s
event log enabled      true
I200512 13:57:33.357083 1 cli/start.go:1030  using local environment variables: COCKROACH_CHANNEL=official-docker
I200512 13:57:33.357091 1 cli/start.go:1037  process identity: uid 0 euid 0 gid 0 egid 0
I200512 13:57:33.357126 1 cli/start.go:644  starting cockroach node
I200512 13:57:33.359602 32 storage/engine/rocksdb.go:622  opening rocksdb instance at "/var/lib/cockroach/cockroach-temp006495494"
I200512 13:57:33.433550 32 server/server.go:928  [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I200512 13:57:33.434208 32 storage/engine/rocksdb.go:622  opening rocksdb instance at "/var/lib/cockroach"
I200512 13:57:33.500230 32 server/config.go:502  [n?] 1 storage engine initialized
I200512 13:57:33.500238 32 server/config.go:505  [n?] RocksDB cache size: 128 MiB
I200512 13:57:33.500242 32 server/config.go:505  [n?] store 0: RocksDB, max size 0 B, max open file limit 1043576
W200512 13:57:33.518906 32 cli/start.go:996  neither --listen-addr nor --advertise-addr was specified.
The server will advertise "fbcaf7db951b" to other nodes, is this routable?

Consider using:
- for local-only servers:  --listen-addr=localhost
- for multi-node clusters: --advertise-addr=<host/IP addr>
I200512 13:57:33.519812 32 server/server.go:978  [n?] Sleeping till wall time 1589291853519798560 to catches up to 1589291853933519859 to ensure monotonicity. Delta: 413.721299ms
I200512 13:57:33.933996 32 gossip/gossip.go:394  [n1] NodeDescriptor set to node_id:1 address:<network_field:"tcp" address_field:"fbcaf7db951b:26257" > attrs:<> locality:<> ServerVersion:<major_val:19 minor_val:2 patch:0 unstable:0 > build_tag:"v19.2.5" started_at:1589291853933880568 cluster_name:"" sql_address:<network_field:"tcp" address_field:"fbcaf7db951b:26257" > 
W200512 13:57:33.968550 100 storage/replica_range_lease.go:554  can't determine lease status due to node liveness error: node not in the liveness table
github.com/cockroachdb/cockroach/pkg/storage.init.ializers
	/go/src/github.com/cockroachdb/cockroach/pkg/storage/node_liveness.go:44
runtime.main
	/usr/local/go/src/runtime/proc.go:188
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1337
W200512 13:57:33.968576 100 storage/store.go:1530  [n1,s1,r6/1:/Table/{SystemCon…-11}] could not gossip system config: [NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown
I200512 13:57:33.983841 32 server/node.go:431  [n1] initialized store [n1,s1]: disk (capacity=894 GiB, available=593 GiB, used=8.8 MiB, logicalBytes=56 MiB), ranges=38, leases=2, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=14688.00 p90=78006.00 pMax=57986719.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I200512 13:57:33.983938 32 storage/stores.go:240  [n1] read 0 node addresses from persistent storage
I200512 13:57:33.984042 32 server/node.go:645  [n1] connecting to gossip network to verify cluster ID...
I200512 13:57:33.984057 32 server/node.go:665  [n1] node connected via gossip and verified as part of cluster "3d423bb5-5d67-4ebf-947b-999bec430444"
I200512 13:57:33.984146 32 server/node.go:512  [n1] node=1: started with [ssd=/var/lib/cockroach] engine(s) and attributes []
I200512 13:57:33.984936 32 server/server.go:1514  [n1] starting http server at [::]:8080 (use: fbcaf7db951b:8080)
I200512 13:57:33.984945 32 server/server.go:1521  [n1] starting grpc/postgres server at [::]:26257
I200512 13:57:33.984953 32 server/server.go:1522  [n1] advertising CockroachDB node at fbcaf7db951b:26257
I200512 13:57:33.993135 135 storage/node_liveness.go:474  [n1,liveness-hb] heartbeat failed on epoch increment; retrying
I200512 13:57:33.996363 32 server/server.go:1590  [n1] done ensuring all necessary migrations have run
I200512 13:57:33.996390 32 server/server.go:1841  [n1] serving sql connections
I200512 13:57:33.996433 32 cli/start.go:803  [config] clusterID: 3d423bb5-5d67-4ebf-947b-999bec430444
I200512 13:57:33.996444 32 cli/start.go:812  node startup completed:
CockroachDB node starting at 2020-05-12 13:57:33.996402369 +0000 UTC (took 0.8s)
build:               CCL v19.2.5 @ 2020/03/16 18:27:12 (go1.12.12)
webui:               http://fbcaf7db951b:8080
sql:                 postgresql://root@fbcaf7db951b:26257?sslmode=disable
RPC client flags:    /cockroach/cockroach <client cmd> --host=fbcaf7db951b:26257 --insecure
logs:                /var/lib/cockroach/logs
temp dir:            /var/lib/cockroach/cockroach-temp006495494
external I/O path:   /var/lib/cockroach/extern
store[0]:            path=/var/lib/cockroach,attrs=ssd
status:              restarted pre-existing node
clusterID:           3d423bb5-5d67-4ebf-947b-999bec430444
nodeID:              1
I200512 13:57:34.000995 167 server/server_update.go:50  [n1] failed attempt to upgrade cluster version, error: node 1 not running (UNAVAILABLE), cannot determine version
I200512 13:57:34.006884 169 sql/event_log.go:130  [n1] Event: "node_restart", target: 1, info: {Descriptor:{NodeID:1 Address:fbcaf7db951b:26257 Attrs: Locality: ServerVersion:19.2 BuildTag:v19.2.5 StartedAt:1589291853933880568 LocalityAddress:[] ClusterName: SQLAddress:fbcaf7db951b:26257} ClusterID:3d423bb5-5d67-4ebf-947b-999bec430444 StartedAt:1589291853933880568 LastUp:1589291850772143054}
I200512 13:57:34.606911 1 cli/start.go:865  received signal 'terminated'
I200512 13:57:34.607506 1 cli/start.go:930  initiating graceful shutdown of server
I200512 13:57:34.609130 274 util/stop/stopper.go:542  [server drain process] quiescing; tasks left:
1      [async] intent_resolver_ir_batcher
1      [async] intent_resolver_gc_batcher
1      [async] closedts-rangefeed-subscriber
1      [async] auto-upgrade
W200512 13:57:34.609348 74 vendor/google.golang.org/grpc/clientconn.go:1206  grpc: addrConn.createTransport failed to connect to {fbcaf7db951b:26257 0  <nil>}. Err :connection error: desc = "transport: failed to write client preface: io: read/write on closed pipe". Reconnecting...
I200512 13:57:34.610184 274 storage/engine/rocksdb.go:762  closing rocksdb instance at "/var/lib/cockroach/cockroach-temp006495494"
I200512 13:57:34.619631 274 storage/engine/rocksdb.go:762  closing rocksdb instance at "/var/lib/cockroach"
I200512 13:57:34.627399 1 cli/start.go:976  server drained and shutdown completed
